<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jee/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:component-scan base-package="com.gl.subway"
		scoped-proxy="interfaces">
		<context:include-filter type="regex"
			expression="com.gl.subway.services.*" />
	</context:component-scan>

	<jpa:repositories base-package="com.gl.subway.repository" />

	<!-- Transactions driven by annotations -->
	<tx:annotation-driven />

	<bean id="jpaVendor"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<jee:jndi-lookup jndi-name="java:comp/env/db/hbmDialect" />
		</property>
		<property name="showSql">
			<jee:jndi-lookup jndi-name="java:comp/env/db/showSql" />
		</property>
		<property name="generateDdl" value="true" />
	</bean>

	<bean name="databaseType" class="java.lang.String">
		<constructor-arg>
			<jee:jndi-lookup jndi-name="java:comp/env/db/type" />
		</constructor-arg>
	</bean>

	<bean class="java.net.URI" id="dbUrl">
		<constructor-arg>
			<jee:jndi-lookup jndi-name="java:comp/env/db/url" />
		</constructor-arg>
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<jee:jndi-lookup jndi-name="java:comp/env/db/jdbcDriver" />
		</property>
		<property name="url"
			value="#{ 'jdbc:'+ @databaseType +':' + (  @dbUrl.getHost() == 'mem' ? '' : '//' ) + @dbUrl.getHost() + ':' + (  @dbUrl.getPort() != 0 ? @dbUrl.getPort() : '' )  + @dbUrl.getPath() }" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password"
			value="#{ ( @dbUrl.getUserInfo().split(':')[1] == 'blank' ? '': @dbUrl.getUserInfo().split(':')[1] ) }" />
	</bean>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="com.gl.subway.domain" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendor" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>

	<bean name="mongoDbName" class="java.lang.String">
		<constructor-arg>
			<jee:jndi-lookup jndi-name="java:comp/env/mongo/dbname" />
		</constructor-arg>
	</bean>

	<bean name="mongoHost" class="java.lang.String">
		<constructor-arg>
			<jee:jndi-lookup jndi-name="java:comp/env/mongo/host" />
		</constructor-arg>
	</bean>

	<bean name="mongoPort" class="java.lang.Integer">
		<constructor-arg>
			<jee:jndi-lookup jndi-name="java:comp/env/mongo/port" />
		</constructor-arg>
	</bean>

	<mongo:repositories base-package="com.gl.subway.repository" />
	<mongo:db-factory id="mongoDbFactory" dbname="#{@mongoDbName}" host="#{@mongoHost}"
		port="#{@mongoPort}" />

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongoDbFactory" />
	</bean>

	<aop:aspectj-autoproxy/>
	
	<bean id="loggerPedidosAspect" class="com.gl.subway.aop.LoggerPedidosAspect"/>

</beans>